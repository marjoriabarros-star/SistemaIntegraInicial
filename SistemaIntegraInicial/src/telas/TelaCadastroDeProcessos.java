/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

/**
 *
 * @author Marjori Barros
 */
<<<<<<< HEAD

import java.awt.event.ActionEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaCadastroDeProcessos extends javax.swing.JFrame {

    private String tipoUsuario;
    private int idProcessoEdicao = -1;

=======
public class TelaCadastroDeProcessos extends javax.swing.JFrame {

>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
    /**
     * Creates new form TelaCadastroDeProcessos
     */
    public TelaCadastroDeProcessos() {
        initComponents();
<<<<<<< HEAD
        setLocationRelativeTo(null);
        this.tipoUsuario = "Visitante";
        configurarComponentes();
        atualizarLabelUsuario();
    }
    public TelaCadastroDeProcessos(String tipoUsuario) {
        initComponents();
        setLocationRelativeTo(null);
        this.tipoUsuario = tipoUsuario;
        setTitle("Cadastro de Processos - " + tipoUsuario);
        configurarComponentes();
        configurarPermissoes(tipoUsuario);
        atualizarLabelUsuario();
    }

    private void configurarPermissoes(String tipoUsuario) {
        boolean podeGerenciar = tipoUsuario.equals("Administrador") || 
                               tipoUsuario.equals("Direção") ||
                               tipoUsuario.equals("Gerência");
        
        btnCadastrarProcesso.setEnabled(podeGerenciar);
        
        if (!podeGerenciar) {
            btnCadastrarProcesso.setToolTipText("Acesso restrito para " + tipoUsuario);
            JOptionPane.showMessageDialog(this, 
                "Acesso de visualização apenas. \nApenas Administradores, Direção e Gerência podem cadastrar processos.",
                "Acesso Restrito", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    private void configurarComponentes() {
    // Configurar campo ID como somente leitura
    txtID.setEditable(false);
    txtID.setText("Gerado automaticamente");
    
    // Centralizar janela
    setLocationRelativeTo(null);
}
public TelaCadastroDeProcessos(String tipoUsuario, int idProcesso, String descricao, String setor) {
    initComponents();
    setLocationRelativeTo(null);
    this.tipoUsuario = tipoUsuario;
    setTitle("Editar Processo - " + tipoUsuario);
    configurarComponentes();
    configurarPermissoes(tipoUsuario);
    
    // Preencher os campos com os dados do processo
    preencherCamposEdicao(idProcesso, descricao, setor);
}
private void preencherCamposEdicao(int idProcesso, String descricao, String setor) {
    // Mostrar ID do processo (somente leitura)
    txtID.setText(String.valueOf(idProcesso));
    txtID.setEditable(false);
    
    // Preencher descrição
    JtxtArea.setText(descricao);
    
    // Selecionar o setor no combobox
    for (int i = 0; i < cbSetor.getItemCount(); i++) {
        if (cbSetor.getItemAt(i).equals(setor)) {
            cbSetor.setSelectedIndex(i);
            break;
        }
    }
        // Mudar o texto do botão para "Atualizar"
    btnCadastrarProcesso.setText("Atualizar Processo");
    
    // Armazenar o ID do processo para atualização
    this.idProcessoEdicao = idProcesso;
}
    private void atualizarLabelUsuario() {
    System.out.println("DEBUG: atualizarLabelUsuario() chamado - tipoUsuario = " + tipoUsuario);
    jLabel5.setText("Bem-vindo(a), " + tipoUsuario + "!");
    System.out.println("DEBUG: Texto definido para: " + jLabel5.getText());
    }
    
=======
    }
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtID = new javax.swing.JTextField();
<<<<<<< HEAD
        JtxtArea = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCadastrarProcesso = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnLimparCadProcesso = new javax.swing.JButton();
=======
        txtNomeCad = new javax.swing.JTextField();
        txtEmailCad = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnCadastrarUser = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        btnLimparCadUser = new javax.swing.JButton();
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
        jLabel3 = new javax.swing.JLabel();
        btnVoltarCadProc = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
<<<<<<< HEAD
        cbSetor = new javax.swing.JComboBox<>();
=======
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 51, 255));

        txtID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIDActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Cadastro de Processos");

<<<<<<< HEAD
        btnCadastrarProcesso.setText("Cadastrar");
        btnCadastrarProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarProcessoActionPerformed(evt);
            }
        });

        jLabel2.setText(" ID:");

        btnLimparCadProcesso.setText("Limpar");
        btnLimparCadProcesso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCadProcessoActionPerformed(evt);
            }
        });
=======
        btnCadastrarUser.setText("Cadastrar");

        jLabel2.setText(" ID:");

        btnLimparCadUser.setText("Limpar");
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241

        jLabel3.setText("Setor:");

        btnVoltarCadProc.setText("Voltar");
        btnVoltarCadProc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarCadProcActionPerformed(evt);
            }
        });

        jLabel4.setText("Descrição do Processo:");

        jLabel5.setText("Bem-vindo(a), [Usuário]! ");

<<<<<<< HEAD
        cbSetor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecionar", "Fiscal", "Contábil", "RH", "Declarações", "Societário", "Financeiro", "TI", "Atendimento" }));

=======
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(187, 187, 187)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
<<<<<<< HEAD
                                        .addComponent(btnCadastrarProcesso)
                                        .addGap(37, 37, 37)
                                        .addComponent(btnLimparCadProcesso)
=======
                                        .addComponent(btnCadastrarUser)
                                        .addGap(37, 37, 37)
                                        .addComponent(btnLimparCadUser)
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
                                        .addGap(44, 44, 44)
                                        .addComponent(btnVoltarCadProc))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel2))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
<<<<<<< HEAD
                                            .addComponent(JtxtArea, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
=======
                                            .addComponent(txtNomeCad, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtEmailCad, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE))))))
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
                        .addGap(0, 145, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel5)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
<<<<<<< HEAD
                    .addComponent(jLabel3)
                    .addComponent(cbSetor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(JtxtArea, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltarCadProc)
                    .addComponent(btnLimparCadProcesso)
                    .addComponent(btnCadastrarProcesso))
=======
                    .addComponent(txtNomeCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtEmailCad, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnVoltarCadProc)
                    .addComponent(btnLimparCadUser)
                    .addComponent(btnCadastrarUser))
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
                .addGap(11, 11, 11)
                .addComponent(jLabel5)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIDActionPerformed

    private void btnVoltarCadProcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarCadProcActionPerformed
<<<<<<< HEAD
        new TelaProcessos(tipoUsuario).setVisible(true);  // Abre a tela de usuários
        this.dispose(); // Fecha o dashboard
    }//GEN-LAST:event_btnVoltarCadProcActionPerformed

    private void btnCadastrarProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarProcessoActionPerformed
        if (!validarPermissao()) {
            return;
        }
        
        if (!validarCampos()) {
            return;
        }
        
        cadastrarProcesso();
    }//GEN-LAST:event_btnCadastrarProcessoActionPerformed

    private void btnLimparCadProcessoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCadProcessoActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparCadProcessoActionPerformed

        private boolean validarPermissao() {
        boolean podeGerenciar = tipoUsuario.equals("Administrador") || 
                               tipoUsuario.equals("Direção") ||
                               tipoUsuario.equals("Gerência");
        
        if (!podeGerenciar) {
            JOptionPane.showMessageDialog(this, 
                "Acesso negado! Apenas Administradores, Direção e Gerência podem cadastrar processos.",
                "Acesso Negado", JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private boolean validarCampos() {
        String setor = (String) cbSetor.getSelectedItem();
        String descricao = JtxtArea.getText().trim();
        
        if ("Selecionar".equals(setor)) {
            JOptionPane.showMessageDialog(this, "Selecione um setor!", "Validação", JOptionPane.WARNING_MESSAGE);
            cbSetor.requestFocus();
            return false;
        }
        
        if (descricao.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Digite a descrição do processo!", "Validação", JOptionPane.WARNING_MESSAGE);
            JtxtArea.requestFocus();
            return false;
        }
        
        if (descricao.length() < 10) {
            JOptionPane.showMessageDialog(this, "A descrição deve ter pelo menos 10 caracteres!", "Validação", JOptionPane.WARNING_MESSAGE);
            JtxtArea.requestFocus();
            return false;
        }
        
        return true;
    }
    
    private void cadastrarProcesso() {
        String setor = (String) cbSetor.getSelectedItem();
        String descricao = JtxtArea.getText().trim();
        int setorId = obterIdSetor(setor);
        
        if (setorId == -1) {
            JOptionPane.showMessageDialog(this, "Setor não encontrado: " + setor);
            return;
        }
        
  String sql;
    boolean isEdicao = (idProcessoEdicao != -1);
    
    if (isEdicao) {
        // MODO EDIÇÃO - UPDATE
        sql = "UPDATE Processos SET descricao = ?, setor_id = ? WHERE id_processo = ?";
    } else {
        // MODO CADASTRO - INSERT
        sql = "INSERT INTO Processos (descricao, setor_id) VALUES (?, ?)";
    }
    
    try (Connection conn = DriverManager.getConnection(
        "jdbc:mysql://localhost:3306/integra_inicial", "root", "l5PV3IYH@");
         PreparedStatement stmt = conn.prepareStatement(sql)) {
        
        stmt.setString(1, descricao);
        stmt.setInt(2, setorId);
        
        if (isEdicao) {
            stmt.setInt(3, idProcessoEdicao); // WHERE id_processo = ?
        }
        
        int linhasAfetadas = stmt.executeUpdate();
        
        if (linhasAfetadas > 0) {
            String mensagemSucesso = isEdicao ? 
                "✅ Processo atualizado com sucesso!" : 
                "✅ Processo cadastrado com sucesso!";
            
            JOptionPane.showMessageDialog(this, mensagemSucesso, "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            limparCampos();
            
            // Voltar para a lista após salvar
            new TelaProcessosCadastrados(tipoUsuario).setVisible(true);
            this.dispose();
        }
        
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, 
            "Erro ao " + (isEdicao ? "atualizar" : "cadastrar") + " processo: " + e.getMessage(),
            "Erro", JOptionPane.ERROR_MESSAGE);
    }
    }
    
private int obterIdSetor(String nomeSetor) {
    String sql = "SELECT id_setor FROM Setores WHERE nome_setor = ?";
    
    try (Connection conn = DriverManager.getConnection(
        "jdbc:mysql://localhost:3306/integra_inicial", "root", "l5PV3IYH@");
         PreparedStatement stmt = conn.prepareStatement(sql)) {
        
        stmt.setString(1, nomeSetor);
        ResultSet rs = stmt.executeQuery();
        
        if (rs.next()) {
            return rs.getInt("id_setor");
        }
    } catch (SQLException e) {
    JOptionPane.showMessageDialog(this, 
        "Erro ao cadastrar processo: " + e.getMessage(), // ❌ Genérico
        "Erro", JOptionPane.ERROR_MESSAGE);
    }  
    return -1;
    }
    
    private void limparCampos() {
    cbSetor.setSelectedIndex(0);
    JtxtArea.setText("");
    
    // ✅ RESETAR MODO EDIÇÃO
    if (idProcessoEdicao != -1) {
        txtID.setText("Automático");
        btnCadastrarProcesso.setText("Cadastrar");
        idProcessoEdicao = -1;
    }
    
    cbSetor.requestFocus();
    }
=======
        new TelaProcessos().setVisible(true); // Abre a tela de usuários
        this.dispose(); // Fecha o dashboard
    }//GEN-LAST:event_btnVoltarCadProcActionPerformed

>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaCadastroDeProcessos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaCadastroDeProcessos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
<<<<<<< HEAD
    private javax.swing.JTextField JtxtArea;
    private javax.swing.JButton btnCadastrarProcesso;
    private javax.swing.JButton btnLimparCadProcesso;
    private javax.swing.JButton btnVoltarCadProc;
    private javax.swing.JComboBox<String> cbSetor;
=======
    private javax.swing.JButton btnCadastrarUser;
    private javax.swing.JButton btnLimparCadUser;
    private javax.swing.JButton btnVoltarCadProc;
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
<<<<<<< HEAD
    private javax.swing.JTextField txtID;
    // End of variables declaration//GEN-END:variables


=======
    private javax.swing.JTextField txtEmailCad;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtNomeCad;
    // End of variables declaration//GEN-END:variables
>>>>>>> 06c877f18a4b3a1dda1dab94ab8544262e3d8241
}
